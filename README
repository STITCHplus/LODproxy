Linked Open Data proxy, example script, 

This is a working example for proxying linked open data objects.

Can be used for making requests to the cloud more reliable.

Program gets data from inet, and parses it from xml or json to a dict.

Example output:

run 1:

CRITICAL:root:Setting backend to pickle
CRITICAL:root:Getting Amsterdam via backend : Pickle
CRITICAL:root:No data for Amsterdam via backend : Pickle
CRITICAL:root:OpenData: Trying to open http://dbpedia.org/data/Amsterdam.jsond.
CRITICAL:root:OpenData: Response-type data 'json' from http://dbpedia.org/data/Amsterdam.jsond.
CRITICAL:root:OpenData: Getting 562084 bytes from http://dbpedia.org/data/Amsterdam.jsond
CRITICAL:root:OpenData: Got 562084 bytes from http://dbpedia.org/data/Amsterdam.jsond
CRITICAL:root:Storing Amsterdam via backend : Pickle
CRITICAL:root:Storing Amsterdam into /tmp/lod/dbpedia/3eb8670d999ac077dd0e2c345cb7c905
<type 'dict'>
CRITICAL:root:Getting Appel via backend : Pickle
CRITICAL:root:No data for Appel via backend : Pickle
CRITICAL:root:OpenData: Trying to open http://dbpedia.org/sparql?default-graph-uri=http://dbpedia.org&query=DESCRIBE+<http://dbpedia.org/resource/Appel>&format=json.
CRITICAL:root:OpenData: Response-type data 'json' from http://dbpedia.org/sparql?default-graph-uri=http://dbpedia.org&query=DESCRIBE+<http://dbpedia.org/resource/Appel>&format=json.
CRITICAL:root:OpenData: Getting 10251 bytes from http://dbpedia.org/sparql?default-graph-uri=http://dbpedia.org&query=DESCRIBE+<http://dbpedia.org/resource/Appel>&format=json
CRITICAL:root:OpenData: Got 10251 bytes from http://dbpedia.org/sparql?default-graph-uri=http://dbpedia.org&query=DESCRIBE+<http://dbpedia.org/resource/Appel>&format=json
CRITICAL:root:Storing Appel via backend : Pickle
CRITICAL:root:Storing Appel into /tmp/lod/dbpedia_sparql/4eb0daf0e75aff7a440ab94c5cbb13c0
<type 'dict'>

run 2:

CRITICAL:root:Setting backend to pickle
CRITICAL:root:Reading Amsterdam from /tmp/lod/dbpedia3eb8670d999ac077dd0e2c345cb7c905
CRITICAL:root:Getting Amsterdam via backend : Pickle
CRITICAL:root:Got Amsterdam via backend : Pickle
<type 'dict'>
CRITICAL:root:Reading Appel from /tmp/lod/dbpedia_sparql4eb0daf0e75aff7a440ab94c5cbb13c0
CRITICAL:root:Getting Appel via backend : Pickle
CRITICAL:root:Got Appel via backend : Pickle
<type 'dict'>

